<?php
/**
 * @file
 * Code for the Inactive Users feature.
 */

include_once 'inactive_users.features.inc';

/**
 * Implements hook_user_delete().
 */
function inactive_users_user_delete($account) {
  _inactive_users_remove_contact($account);
}

/**
 * Implements hook_user_cancel().
 */
function inactive_users_user_cancel($edit, $account, $method) {
  // If 'Delete the account and its content' is selected,
  // inactive_users_user_delete() is called instead.
  switch ($method) {
    // Disable the account and keep its content.
    case 'user_cancel_block':
    // Disable the account and unpublish its content.
    case 'user_cancel_block_unpublish':
    // Delete the account and make its content belong to the Anonymous user
    case 'user_cancel_reassign':
      _inactive_users_remove_contact($account);
      break;
  }
}

/**
 * Remove associated CiviCRM contact for a Drupal account.
 *
 * @TODO Handle CiviCRM API failures properly (CiviCRM hands back an
 * array which if() won't catch). Use civicrm_api3() & trap
 * exceptions?
 */
function _inactive_users_remove_contact($account) {
  civicrm_initialize();
  try {
    $params = array(
      'uf_id' => $account->uid,
      'version' => 3,
      'contact_type' => 'Individual',
    );
    $ufmatch = civicrm_api3('UFMatch','Get', $params);
    if ($ufmatch = reset($ufmatch['values'])) {
      $params = array(
        'id' => $ufmatch['contact_id'],
        'version' => 3,
        // 'skip_undelete' => TRUE,
      );
      $contact = civicrm_api('Contact', 'Get', $params);
      $contact = reset($contact['values']);
      $name = $contact['display_name'];
      $delete = civicrm_api3('Contact', 'Delete', $params);
      drupal_set_message(t('Contact %name has been deleted.', array('%name' => $name)));
    }
  }
  catch (Exception $e) {
    drupal_set_message(t('Unable to delete contact %name, error was: %message', array('%message' => $e->getMessage(), '%name' => $name)), 'error');
  }
}
