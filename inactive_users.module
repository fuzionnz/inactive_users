<?php

/**
 * Implements hook_user_predelete().
 *
 * as hook_user_delete() is also used by core and it
 * already deletes the uf match record since it is executed first.
 */
function inactive_users_user_predelete($account) {
  _inactive_users_remove_contact($account);
}

/**
 * Implements hook_user_cancel().
 */
function inactive_users_user_cancel($edit, $account, $method) {
  // If 'Delete the account and its content' is selected,
  // inactive_users_user_delete() is called instead.
  switch ($method) {
    // Disable the account and keep its content.
    case 'user_cancel_block':
    // Disable the account and unpublish its content.
    case 'user_cancel_block_unpublish':
    // Delete the account and make its content belong to the Anonymous user
    case 'user_cancel_reassign':
      _inactive_users_remove_contact($account);
      break;
  }
}

/**
 * Remove associated CiviCRM contact for a Drupal account.
 *
 * @TODO Handle CiviCRM API failures properly (CiviCRM hands back an
 * array which if() won't catch). Use civicrm_api3() & trap
 * exceptions?
 */
function _inactive_users_remove_contact($account) {
  \Drupal::service('civicrm')->initialize();
  try {
    if (empty($account->id())) {
      return;
    }
    $ufMatch = civicrm_api3('UFMatch', 'get', [
      'sequential' => 1,
      'uf_id' => $account->id(),
    ])['values'][0] ?? NULL;

    if (empty($ufMatch['contact_id'])) {
      return;
    }

    $civiContact = civicrm_api3('Contact', 'get', [
      'sequential' => 1,
      'id' => $ufMatch['contact_id'],
    ])['values'][0] ?? NULL;

    if (empty($civiContact['id'])) {
      return;
    }

    $delete = civicrm_api3('Contact', 'delete', [
      'id' => $civiContact['id'],
    ]);
    if (!empty($delete['count'])) {
      \Drupal::messenger()->addStatus(t('Contact %name has been deleted.', ['%name' => $civiContact['contact.display_name']]));
    }
  }
  catch (Exception $e) {
    if (!empty($civiContact['display_name'])) {
      \Drupal::messenger()->addError(t('Unable to delete contact %name, error was: %message.', ['%message' => $e->getMessage(), '%name' => $civiContact['display_name']]));
    }
  }
}
